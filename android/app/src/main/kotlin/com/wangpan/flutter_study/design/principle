

设计原则：降低对象之间的耦合，增加可复用性，可扩展性和可维护性
单一：一个类只干一件事，实现类要单一；目的是为了便于理解，提高代码的可读性
开闭：对扩展开发，对修改关闭；目的是降低维护带来的新风险
接口隔离：一个接口只干一件事，接口要精简单一；目的是功能解耦，高内聚，低耦合
依赖倒置：高层不应该依赖底层，要面向接口编程；更利于代码结构的升级扩展
迪米特：不该知道的不要知道，一个类应该保持对其他对象的最少了解；只和朋友交流，不和陌生人说话，降低耦合
里氏替换：不要破坏继承体系，子类重写方法功能发生变化，不应该影响父类方法的含义；防止继承泛滥
合成复用：尽量使用组合或者聚合关系实现代码复用，少使用继承；降低代码耦合